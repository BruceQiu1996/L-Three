syntax = "proto3";

option csharp_namespace = "ThreeL.SocketServer.Application.Contract";
import "Protos/File.proto";
import "Protos/ChatRecord.proto";

message SocketServerUserLoginRequest{
}

message SocketServerUserLoginResponse{
	bool result = 1;
	int64 userId = 2;
	string userName = 3;
}

message AddFriendRequest{
	int64 friendId = 1;
}

message AddFriendResponse{
	bool result = 1;
	string message = 2;
}

message ReplyAddFriendRequest{
	int64 requestId = 1;
	bool agree = 2;
}

message ReplyAddFriendResponse{
	bool result = 1;
	string message = 2;
	int64 activerId = 3;
	int64 passiverId = 4;
	string activerName = 5;
	string passiverName = 6;
	int64 activerAvatarId = 7;
	int64 passiverAvatarId = 8;
}

message InviteFriendsIntoGroupRequest{
	string friends = 1;
	int32 groupId = 2;
}

message InviteFriendsIntoGroupResponse{
	bool result = 1;
	string message = 2;
	string friends = 3;
	int32 groupId = 4;
	int64 avatarId = 5;
	string groupName = 6;
}

message ValidateRelationRequest{
	int64 To = 1;
	bool IsGroup = 2;
}

message ValidateRelationResponse{
	bool result = 1;
}

service SocketServerService{
	rpc SocketServerUserLogin(SocketServerUserLoginRequest) returns (SocketServerUserLoginResponse);
	rpc FetchFileInfo(FileInfoRequest) returns (FileInfoResponse);
	rpc PostChatRecord(stream ChatRecordPostRequest) returns (ChatRecordPostResponse);
	rpc PostChatRecordSingle(ChatRecordPostRequest) returns (ChatRecordPostResponse);
    rpc PostVoiceChatRecordSingle(VoiceChatRecordPostRequest) returns (VoiceChatRecordPostResponse);
	rpc WithdrawChatRecord(ChatRecordWithdrawRequest) returns (ChatRecordWithdrawResponse);
	rpc AddFriend(AddFriendRequest) returns (AddFriendResponse);
	rpc ReplyAddFriend(ReplyAddFriendRequest) returns (ReplyAddFriendResponse);
	rpc InviteFriendsIntoGroup(InviteFriendsIntoGroupRequest) returns (InviteFriendsIntoGroupResponse);
	rpc ValidateRelation(ValidateRelationRequest) returns (ValidateRelationResponse);
}