<Page x:Class="ThreeL.Client.Win.Pages.Chat"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:hc="https://handyorg.github.io/handycontrol"
      xmlns:converts="clr-namespace:ThreeL.Client.Win.Converters"
      xmlns:helpers="clr-namespace:ThreeL.Client.Win.Helpers"
      xmlns:myControls ="clr-namespace:ThreeL.Client.Win.MyControls"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="Friend">
    <Page.Resources>
        <Style TargetType="{x:Type Image}">
            <Setter Property="MaxHeight" Value="{Binding RelativeSource={RelativeSource Self}, Path=Source.(BitmapSource.PixelHeight)}" />
            <Setter Property="MaxWidth" Value="{Binding RelativeSource={RelativeSource Self}, Path=Source.(BitmapSource.PixelWidth)}" />
        </Style>
        <converts:ValueHalfConverter x:Key="ValueHalfConverter"></converts:ValueHalfConverter>
        <converts:MessageDataTemplateSelector x:Key="MessageDataTemplateSelector"></converts:MessageDataTemplateSelector>
        <DataTemplate x:Key="loadData">
            <TextBlock Text="加载历史聊天记录" HorizontalAlignment="Center" FontSize="13" Foreground="{DynamicResource LoadColor}" Cursor="Hand" TextDecorations="Underline">
                <behaviors:Interaction.Triggers>
                        <behaviors:EventTrigger EventName="MouseLeftButtonDown">
                                    <behaviors:InvokeCommandAction Command="{Binding DataContext.LoadHistoryMessageCommmand,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ListBox}}"
                                                                   ></behaviors:InvokeCommandAction>
                        </behaviors:EventTrigger>
                </behaviors:Interaction.Triggers>
            </TextBlock>
        </DataTemplate>
        <DataTemplate x:Key="txtSender">
            <Grid Name="ctx">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                    <TextBox Text="{Binding Text,UpdateSourceTrigger=PropertyChanged}"
                             Background="#555"
                             AcceptsReturn="True"
                             VerticalAlignment="Top"
                             IsReadOnly="True"
                             VerticalContentAlignment="Top"
                             MaxWidth="{Binding ElementName=ctx,Path=ActualWidth,Converter={StaticResource ValueHalfConverter},UpdateSourceTrigger=PropertyChanged}"
                             BorderThickness="0"
                             Foreground="White"
                             HorizontalAlignment="Right"
                             FontSize="15">
                    </TextBox>
                </StackPanel>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="imageSender">
            <Grid Name="ctx">
                <Image Source="{Binding ImageLocation}" 
                        MaxWidth="{Binding ElementName=ctx,Path=ActualWidth,Converter={StaticResource ValueHalfConverter},UpdateSourceTrigger=PropertyChanged}"
                       HorizontalAlignment="Right">
                </Image>
            </Grid>
        </DataTemplate>






        <DataTemplate x:Key="txtReceiver">
            <Grid Name="ctx1">
                <StackPanel Orientation="Horizontal">
                    <TextBox Text="{Binding Text,UpdateSourceTrigger=PropertyChanged}"
                             Background="#555"
                             TextWrapping="Wrap"
                             AcceptsReturn="True"
                             VerticalAlignment="Top"
                             VerticalContentAlignment="Top"
                             MaxWidth="{Binding ElementName=ctx1,Path=ActualWidth,Converter={StaticResource ValueHalfConverter},UpdateSourceTrigger=PropertyChanged}"
                             BorderThickness="0"
                             Foreground="White"
                             HorizontalAlignment="Left"
                             FontSize="15">
                    </TextBox>
                </StackPanel>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="imageReceiver">
            <Grid Name="ctx">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                    <TextBox Text="{Binding Text,UpdateSourceTrigger=PropertyChanged}"
                             Background="{DynamicResource DefaultHoverColor}"
                             TextWrapping="Wrap"
                             AcceptsReturn="True"
                             VerticalAlignment="Top"
                             VerticalContentAlignment="Top"
                             MaxWidth="{Binding ElementName=ctx,Path=ActualWidth,Converter={StaticResource ValueHalfConverter},UpdateSourceTrigger=PropertyChanged}"
                             BorderThickness="0"
                             Foreground="{DynamicResource DefaultFontColor}"
                             HorizontalAlignment="Right"
                             FontSize="15">
                    </TextBox>
                </StackPanel>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="time">
            <TextBox Text="{Binding DateTime}"
                     IsReadOnly="True"
                     TextWrapping="Wrap"
                     AcceptsReturn="True"
                     VerticalAlignment="Top"
                     VerticalContentAlignment="Top"
                     BorderThickness="0"
                     Foreground="White"
                     Background="#555"
                     HorizontalAlignment="Center"
                     FontSize="14">
            </TextBox>
        </DataTemplate>
    </Page.Resources>
    <behaviors:Interaction.Triggers>
        <behaviors:EventTrigger EventName="Loaded">
            <behaviors:InvokeCommandAction Command="{Binding LoadCommandAsync}"></behaviors:InvokeCommandAction>
        </behaviors:EventTrigger>
    </behaviors:Interaction.Triggers>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="180"></ColumnDefinition>
            <ColumnDefinition Width="*"></ColumnDefinition>
        </Grid.ColumnDefinitions>

        <Grid Grid.Column="0" Margin="0 0 0 0">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="45"></RowDefinition>
            </Grid.RowDefinitions>
            <ScrollViewer Margin="0" Grid.Row="0">
                <ListBox ScrollViewer.CanContentScroll="False"
                         Padding="0"
                         ScrollViewer.IsDeferredScrollingEnabled="True"
                         ScrollViewer.VerticalScrollBarVisibility="Visible"
                         Background="#222"
                         ItemsSource="{Binding FriendViewModels,UpdateSourceTrigger=PropertyChanged}"
                         SelectedItem="{Binding FriendViewModel,UpdateSourceTrigger=PropertyChanged}"
                         BorderThickness="0" BorderBrush="Transparent">
                    <behaviors:Interaction.Triggers>
                        <behaviors:EventTrigger EventName="SelectionChanged">
                            <behaviors:InvokeCommandAction Command="{Binding SelectFriendCommandAsync}"></behaviors:InvokeCommandAction>
                        </behaviors:EventTrigger>
                    </behaviors:Interaction.Triggers>
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Vertical"></StackPanel>
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>

                    <ListBox.ItemContainerStyle>
                        <Style TargetType="{x:Type ListBoxItem}">
                            <Setter Property="OverridesDefaultStyle" Value="True" />
                            <Setter Property="SnapsToDevicePixels" Value="True" />
                            <Setter Property="Foreground" Value="Black" />
                            <Setter Property="Height" Value="65" />
                            <Setter Property="Padding" Value="0" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                        <Border Margin="0 0 4 1" 
                                                CornerRadius="0 2 2 0"
                                                Background="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem,Mode=FindAncestor},Path=Background}">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="60"></ColumnDefinition>
                                                    <ColumnDefinition Width="*"></ColumnDefinition>
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="*"></RowDefinition>
                                                    <RowDefinition Height="*"></RowDefinition>
                                                </Grid.RowDefinitions>

                                                <Border Grid.Row="0" Grid.RowSpan="2" Grid.Column="0"
                                                        Width="50" Height="50" HorizontalAlignment="Left" Margin="5 0 0 0"
                                                        Background="{DynamicResource PrimaryBrush}">
                                                    <TextBlock Text="J" FontSize="28" HorizontalAlignment="Center" 
                                                               Foreground="White"
                                                               VerticalAlignment="Center"></TextBlock>
                                                </Border>
                                                <TextBlock Grid.Column="1" Margin="2 5 0 0" 
                                                           HorizontalAlignment="Left"
                                                           Foreground="White"
                                                           Text="{Binding DisplayName,UpdateSourceTrigger=PropertyChanged}"
                                                           FontSize="16"/>
                                            </Grid>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#444"></Setter>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="False">
                                    <Setter Property="Background" Value="#111"></Setter>
                                </Trigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="#444"></Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ListBox.ItemContainerStyle>
                </ListBox>
            </ScrollViewer>
            <Grid Grid.Row="1" Background="#111">
            </Grid>
        </Grid>

        <Grid Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="36"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="50"></RowDefinition>
            </Grid.RowDefinitions>
            <Border Grid.Row="0" BorderBrush="#111" Margin="0 2 0 0" 
                    CornerRadius="0 0 0 0"
                    BorderThickness="0 0 0 2">
                <Grid>
                    <TextBlock Text="{Binding FriendViewModel.DisplayName}" FontSize="20"
                           Foreground="White"
                           HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10 0 0 5"></TextBlock>

                    <Label Height="30" Background="Transparent" BorderThickness="0" Margin="0 0 0 0"
                           HorizontalAlignment="Right">
                        <Path Data="{StaticResource vedio}" Stretch="Uniform" Fill="#aaa"></Path>
                    </Label>

                    <Label Height="32" Background="Transparent" BorderThickness="0" Margin="0 0 40 0"
                           HorizontalAlignment="Right">
                        <Path Data="{StaticResource audio}" Stretch="Uniform" Fill="#aaa"></Path>
                    </Label>
                </Grid>
            </Border>
            <ScrollViewer helpers:ScrollViewerHelper.AlwaysScrollToEnd="True" 
                          Name="chatScrollViewer"
                          Grid.Row="1"
                          BorderThickness="0"
                          RequestBringIntoView="ScrollViewer_RequestBringIntoView">
                <ListBox ItemsSource="{Binding FriendViewModel.Messages,UpdateSourceTrigger=PropertyChanged}"
                             UseLayoutRounding="True"
                             ScrollViewer.CanContentScroll="False"
                             ScrollViewer.IsDeferredScrollingEnabled="True"
                             PreviewMouseWheel="ListView_PreviewMouseWheel"
                             ItemTemplateSelector="{StaticResource MessageDataTemplateSelector}"
                             TextOptions.TextFormattingMode="Display"
                             BorderThickness="0" Background="Transparent">
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Vertical"></StackPanel>
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>

                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem" BasedOn="{StaticResource ClockListBoxItemStyle}">
                            <Setter Property="Margin" Value="0 4"></Setter>
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="Transparent"></Setter>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="False">
                                    <Setter Property="Background" Value="Transparent"></Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ListBox.ItemContainerStyle>
                </ListBox>
            </ScrollViewer>

            <Border Grid.Row="2" Margin="0 2 0 0">
                <StackPanel Orientation="Horizontal">
                    <TextBox  Grid.Column="0" 
                              Background="#444"
                              Style="{StaticResource TextBoxExtend}"
                              BorderThickness="0"
                              VerticalAlignment="Center" HorizontalAlignment="Stretch"
                              Width="460"
                              Foreground="#ddd"
                              Text="{Binding TextMessage}"
                              VerticalContentAlignment="Top"
                              Height="45" Margin="5 0 0 5"></TextBox>
                    <Button Height="30" Cursor="Hand"
                            Background="Transparent" Command="{Binding SendMessageCommandAsync}" BorderThickness="0" Margin="10 0 0 0"
                            IsDefault="True">
                        <Path Data="{StaticResource send}" 
                              Stretch="Uniform" Fill="{DynamicResource PrimaryBrush}"></Path>
                    </Button>
                    <Button Height="30" Cursor="Hand" Name="RB_Emoji" Command="{Binding OpenEmojiCommand}"
                            Background="Transparent" BorderThickness="0" Margin="10 0 0 0">
                        <Path Data="{StaticResource emoji}" 
                              Stretch="Uniform" Fill="{DynamicResource PrimaryBrush}"></Path>
                    </Button>
                    <Popup x:Name="pop" PopupAnimation="Fade" PlacementTarget="{Binding ElementName=RB_Emoji}" 
                           Placement="Top" HorizontalOffset="-100" AllowsTransparency="True" StaysOpen="False" IsOpen="{Binding IsEmojiOpen}">
                        <myControls:EmojiTabControlUC x:Name="EmojiTabControlUC" Width="455" Height="250" >
                            <behaviors:Interaction.Triggers>
                                <behaviors:EventTrigger EventName="SelectEmojiClick">
                                    <behaviors:InvokeCommandAction Command="{Binding AddEmojiCommandAsync}" PassEventArgsToCommand="True"></behaviors:InvokeCommandAction>
                                </behaviors:EventTrigger>
                            </behaviors:Interaction.Triggers>
                        </myControls:EmojiTabControlUC>
                    </Popup>
                    <Button Height="30" Cursor="Hand"
                            Background="Transparent" BorderThickness="0" Margin="10 0 0 0"
                            IsDefault="True">
                        <Path Data="{StaticResource attach}" 
                              Stretch="Uniform" Fill="{DynamicResource PrimaryBrush}"></Path>
                    </Button>
                </StackPanel>
            </Border>
        </Grid>
    </Grid>
</Page>
